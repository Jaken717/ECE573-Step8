; Symbol table GLOBAL
; name querysize type STRING location 0x10000000 value "Enter size: "
; name prompt type STRING location 0x10000004 value "Enter number: "
; name sorting type STRING location 0x10000008 value "Sorting ..."
; Function: VOID swap([PTR to FLOAT, PTR to FLOAT])
; Function: PTR to FLOAT allocarray([INT])
; Function: VOID readarray([PTR to FLOAT, INT])
; Function: VOID printarray([PTR to FLOAT, INT])
; Function: VOID quicksort([PTR to FLOAT, INT, INT])
; Function: INT partition([PTR to FLOAT, INT, INT])
; Function: INT main([])

; Symbol table main
; name f type PTR to FLOAT location -4
; name size type INT location -8

; Symbol table allocarray
; name size type INT location 12
; name i type INT location -4
; name retval type PTR to FLOAT location -8

; Symbol table readarray
; name size type INT location 12
; name f type PTR to FLOAT location 16
; name i type INT location -4
; name x type FLOAT location -8

; Symbol table quicksort
; name hi type INT location 12
; name lo type INT location 16
; name f type PTR to FLOAT location 20
; name p type INT location -4

; Symbol table partition
; name hi type INT location 12
; name lo type INT location 16
; name f type PTR to FLOAT location 20
; name pivot type FLOAT location -4
; name i type INT location -8
; name j type INT location -12

; Symbol table printarray
; name size type INT location 12
; name f type PTR to FLOAT location 16
; name i type INT location -4

; Symbol table swap
; name y type PTR to FLOAT location 12
; name x type PTR to FLOAT location 16
; name tmp type FLOAT location -4

; generating code to print ; name querysize type STRING location 0x10000000 value "Enter size: "
Generate code for a call expression
Generate code for a call expression
Generate code for a call expression
Generate code for a call expression
; generating code to print ; name prompt type STRING location 0x10000004 value "Enter number: "
Generate code for a call expression
Generate code for a call expression
Generate code for a call expression
Generate code for a call expression
Generate code for a call expression
.section .text
;Current temp: null
;IR Code: 
MV fp, sp
JR func_main
HALT

func_main:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -8
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
SW t20, 0(sp)
ADDI sp, sp, -4
SW t21, 0(sp)
ADDI sp, sp, -4
SW t22, 0(sp)
ADDI sp, sp, -4
SW t23, 0(sp)
ADDI sp, sp, -4
SW t24, 0(sp)
ADDI sp, sp, -4
LA t1, 0x10000000
PUTS t1
GETI t2
SW t2, -8(fp)
ADDI t6, fp, -4
ADDI t3, fp, -8
LW t4, 0(t3)
SW t4, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_allocarray
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
SW t5, 0(t6)
ADDI t7, fp, -4
LW t8, 0(t7)
SW t8, 0(sp)
ADDI sp, sp, -4
ADDI t9, fp, -8
LW t10, 0(t9)
SW t10, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_readarray
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 8
ADDI t16, fp, -4
LW t17, 0(t16)
SW t17, 0(sp)
ADDI sp, sp, -4
LI t11, 0
SW t11, 0(sp)
ADDI sp, sp, -4
ADDI t13, fp, -8
LW t14, 0(t13)
LI t12, 1
SUB t15, t14, t12
SW t15, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_quicksort
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 12
ADDI t18, fp, -4
LW t19, 0(t18)
SW t19, 0(sp)
ADDI sp, sp, -4
ADDI t20, fp, -8
LW t21, 0(t20)
SW t21, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_printarray
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 8
ADDI t22, fp, -4
LW t23, 0(t22)
FREE t23
LI t24, 0
SW t24, 8(fp)
J func_ret_main
func_ret_main:
ADDI sp, sp, 4
LW t24, 0(sp)
ADDI sp, sp, 4
LW t23, 0(sp)
ADDI sp, sp, 4
LW t22, 0(sp)
ADDI sp, sp, 4
LW t21, 0(sp)
ADDI sp, sp, 4
LW t20, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_allocarray:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -8
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
SW t20, 0(sp)
ADDI sp, sp, -4
SW t21, 0(sp)
ADDI sp, sp, -4
SW t22, 0(sp)
ADDI sp, sp, -4
SW t23, 0(sp)
ADDI sp, sp, -4
SW t24, 0(sp)
ADDI sp, sp, -4
SW t25, 0(sp)
ADDI sp, sp, -4
SW t26, 0(sp)
ADDI sp, sp, -4
SW t27, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
ADDI t6, fp, -8
LI t1, 4
ADDI t2, fp, 12
LW t3, 0(t2)
MUL t4, t1, t3
MALLOC t5, t4
SW t5, 0(t6)
ADDI t8, fp, -4
LI t7, 0
SW t7, 0(t8)
loop_1:
ADDI t21, fp, -4
LW t22, 0(t21)
ADDI t23, fp, 12
LW t24, 0(t23)
BGE t22, t24, out_1
ADDI t13, fp, -8
LW t14, 0(t13)
ADDI t10, fp, -4
LW t11, 0(t10)
LI t9, 4
MUL t12, t11, t9
ADD t15, t14, t12
FIMM.S f1, 0.0
FSW f1, 0(t15)
ADDI t20, fp, -4
ADDI t17, fp, -4
LW t18, 0(t17)
LI t16, 1
ADD t19, t18, t16
SW t19, 0(t20)
J loop_1
out_1:
ADDI t26, fp, -8
LW t27, 0(t26)
ADDI t26, fp, -8
LW t27, 0(t26)
SW t27, 8(fp)
J func_ret_allocarray
func_ret_allocarray:
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t27, 0(sp)
ADDI sp, sp, 4
LW t26, 0(sp)
ADDI sp, sp, 4
LW t25, 0(sp)
ADDI sp, sp, 4
LW t24, 0(sp)
ADDI sp, sp, 4
LW t23, 0(sp)
ADDI sp, sp, 4
LW t22, 0(sp)
ADDI sp, sp, 4
LW t21, 0(sp)
ADDI sp, sp, 4
LW t20, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_readarray:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -8
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
SW t20, 0(sp)
ADDI sp, sp, -4
SW t21, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
FSW f2, 0(sp)
ADDI sp, sp, -4
ADDI t2, fp, -4
LI t1, 0
SW t1, 0(t2)
loop_2:
ADDI t17, fp, -4
LW t18, 0(t17)
ADDI t19, fp, 12
LW t20, 0(t19)
BGE t18, t20, out_2
LA t3, 0x10000004
PUTS t3
GETF f1
FSW f1, -8(fp)
ADDI t8, fp, 16
LW t9, 0(t8)
ADDI t5, fp, -4
LW t6, 0(t5)
LI t4, 4
MUL t7, t6, t4
ADD t10, t9, t7
ADDI t11, fp, -8
FLW f2, 0(t11)
FSW f2, 0(t10)
ADDI t16, fp, -4
ADDI t13, fp, -4
LW t14, 0(t13)
LI t12, 1
ADD t15, t14, t12
SW t15, 0(t16)
J loop_2
out_2:
J func_ret_readarray
func_ret_readarray:
ADDI sp, sp, 4
FLW f2, 0(sp)
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t21, 0(sp)
ADDI sp, sp, 4
LW t20, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_quicksort:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -4
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
SW t20, 0(sp)
ADDI sp, sp, -4
SW t21, 0(sp)
ADDI sp, sp, -4
SW t22, 0(sp)
ADDI sp, sp, -4
SW t23, 0(sp)
ADDI sp, sp, -4
SW t24, 0(sp)
ADDI sp, sp, -4
SW t25, 0(sp)
ADDI sp, sp, -4
SW t26, 0(sp)
ADDI sp, sp, -4
SW t27, 0(sp)
ADDI sp, sp, -4
SW t28, 0(sp)
ADDI sp, sp, -4
SW t29, 0(sp)
ADDI sp, sp, -4
ADDI t25, fp, 16
LW t26, 0(t25)
ADDI t27, fp, 12
LW t28, 0(t27)
BGE t26, t28, else_1
ADDI t8, fp, -4
ADDI t1, fp, 20
LW t2, 0(t1)
SW t2, 0(sp)
ADDI sp, sp, -4
ADDI t3, fp, 16
LW t4, 0(t3)
SW t4, 0(sp)
ADDI sp, sp, -4
ADDI t5, fp, 12
LW t6, 0(t5)
SW t6, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_partition
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 12
SW t7, 0(t8)
ADDI t13, fp, 20
LW t14, 0(t13)
SW t14, 0(sp)
ADDI sp, sp, -4
ADDI t15, fp, 16
LW t16, 0(t15)
SW t16, 0(sp)
ADDI sp, sp, -4
ADDI t10, fp, -4
LW t11, 0(t10)
LI t9, 1
SUB t12, t11, t9
SW t12, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_quicksort
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 12
ADDI t21, fp, 20
LW t22, 0(t21)
SW t22, 0(sp)
ADDI sp, sp, -4
ADDI t18, fp, -4
LW t19, 0(t18)
LI t17, 1
ADD t20, t19, t17
SW t20, 0(sp)
ADDI sp, sp, -4
ADDI t23, fp, 12
LW t24, 0(t23)
SW t24, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_quicksort
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 12
J out_3
else_1:
out_3:
func_ret_quicksort:
ADDI sp, sp, 4
LW t29, 0(sp)
ADDI sp, sp, 4
LW t28, 0(sp)
ADDI sp, sp, 4
LW t27, 0(sp)
ADDI sp, sp, 4
LW t26, 0(sp)
ADDI sp, sp, 4
LW t25, 0(sp)
ADDI sp, sp, 4
LW t24, 0(sp)
ADDI sp, sp, 4
LW t23, 0(sp)
ADDI sp, sp, 4
LW t22, 0(sp)
ADDI sp, sp, 4
LW t21, 0(sp)
ADDI sp, sp, 4
LW t20, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_partition:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -12
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
SW t20, 0(sp)
ADDI sp, sp, -4
SW t21, 0(sp)
ADDI sp, sp, -4
SW t22, 0(sp)
ADDI sp, sp, -4
SW t23, 0(sp)
ADDI sp, sp, -4
SW t24, 0(sp)
ADDI sp, sp, -4
SW t25, 0(sp)
ADDI sp, sp, -4
SW t26, 0(sp)
ADDI sp, sp, -4
SW t27, 0(sp)
ADDI sp, sp, -4
SW t28, 0(sp)
ADDI sp, sp, -4
SW t29, 0(sp)
ADDI sp, sp, -4
SW t30, 0(sp)
ADDI sp, sp, -4
SW t31, 0(sp)
ADDI sp, sp, -4
SW t32, 0(sp)
ADDI sp, sp, -4
SW t33, 0(sp)
ADDI sp, sp, -4
SW t34, 0(sp)
ADDI sp, sp, -4
SW t35, 0(sp)
ADDI sp, sp, -4
SW t36, 0(sp)
ADDI sp, sp, -4
SW t37, 0(sp)
ADDI sp, sp, -4
SW t38, 0(sp)
ADDI sp, sp, -4
SW t39, 0(sp)
ADDI sp, sp, -4
SW t40, 0(sp)
ADDI sp, sp, -4
SW t41, 0(sp)
ADDI sp, sp, -4
SW t42, 0(sp)
ADDI sp, sp, -4
SW t43, 0(sp)
ADDI sp, sp, -4
SW t44, 0(sp)
ADDI sp, sp, -4
SW t45, 0(sp)
ADDI sp, sp, -4
SW t46, 0(sp)
ADDI sp, sp, -4
SW t47, 0(sp)
ADDI sp, sp, -4
SW t48, 0(sp)
ADDI sp, sp, -4
SW t49, 0(sp)
ADDI sp, sp, -4
SW t50, 0(sp)
ADDI sp, sp, -4
SW t51, 0(sp)
ADDI sp, sp, -4
SW t52, 0(sp)
ADDI sp, sp, -4
SW t53, 0(sp)
ADDI sp, sp, -4
SW t54, 0(sp)
ADDI sp, sp, -4
SW t55, 0(sp)
ADDI sp, sp, -4
SW t56, 0(sp)
ADDI sp, sp, -4
SW t57, 0(sp)
ADDI sp, sp, -4
SW t58, 0(sp)
ADDI sp, sp, -4
SW t59, 0(sp)
ADDI sp, sp, -4
SW t60, 0(sp)
ADDI sp, sp, -4
SW t61, 0(sp)
ADDI sp, sp, -4
SW t62, 0(sp)
ADDI sp, sp, -4
SW t63, 0(sp)
ADDI sp, sp, -4
SW t64, 0(sp)
ADDI sp, sp, -4
SW t65, 0(sp)
ADDI sp, sp, -4
SW t66, 0(sp)
ADDI sp, sp, -4
SW t67, 0(sp)
ADDI sp, sp, -4
SW t68, 0(sp)
ADDI sp, sp, -4
SW t69, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
FSW f2, 0(sp)
ADDI sp, sp, -4
FSW f3, 0(sp)
ADDI sp, sp, -4
ADDI t8, fp, -4
ADDI t5, fp, 20
LW t6, 0(t5)
ADDI t2, fp, 12
LW t3, 0(t2)
LI t1, 4
MUL t4, t3, t1
ADD t7, t6, t4
FLW f1, 0(t7)
FSW f1, 0(t8)
ADDI t9, fp, -8
ADDI t10, fp, 16
LW t11, 0(t10)
SW t11, 0(t9)
ADDI t12, fp, -12
ADDI t13, fp, 16
LW t14, 0(t13)
SW t14, 0(t12)
loop_3:
ADDI t49, fp, -12
LW t50, 0(t49)
ADDI t51, fp, 12
LW t52, 0(t51)
BGE t50, t52, out_5
ADDI t19, fp, 20
LW t20, 0(t19)
ADDI t16, fp, -12
LW t17, 0(t16)
LI t15, 4
MUL t18, t17, t15
ADD t21, t20, t18
FLW f2, 0(t21)
ADDI t41, fp, -4
FLW f3, 0(t41)
FLT.S t43, f2, f3
LI t42, 0
BEQ t43, t42, else_2
ADDI t26, fp, 20
LW t27, 0(t26)
ADDI t23, fp, -8
LW t24, 0(t23)
LI t22, 4
MUL t25, t24, t22
ADD t28, t27, t25
SW t28, 0(sp)
ADDI sp, sp, -4
ADDI t33, fp, 20
LW t34, 0(t33)
ADDI t30, fp, -12
LW t31, 0(t30)
LI t29, 4
MUL t32, t31, t29
ADD t35, t34, t32
SW t35, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_swap
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 8
ADDI t40, fp, -8
ADDI t37, fp, -8
LW t38, 0(t37)
LI t36, 1
ADD t39, t38, t36
SW t39, 0(t40)
J out_4
else_2:
out_4:
ADDI t48, fp, -12
ADDI t45, fp, -12
LW t46, 0(t45)
LI t44, 1
ADD t47, t46, t44
SW t47, 0(t48)
J loop_3
out_5:
ADDI t58, fp, 20
LW t59, 0(t58)
ADDI t55, fp, -8
LW t56, 0(t55)
LI t54, 4
MUL t57, t56, t54
ADD t60, t59, t57
SW t60, 0(sp)
ADDI sp, sp, -4
ADDI t65, fp, 20
LW t66, 0(t65)
ADDI t62, fp, 12
LW t63, 0(t62)
LI t61, 4
MUL t64, t63, t61
ADD t67, t66, t64
SW t67, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_swap
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
ADDI sp, sp, 8
ADDI t68, fp, -8
LW t69, 0(t68)
ADDI t68, fp, -8
LW t69, 0(t68)
SW t69, 8(fp)
J func_ret_partition
func_ret_partition:
ADDI sp, sp, 4
FLW f3, 0(sp)
ADDI sp, sp, 4
FLW f2, 0(sp)
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t69, 0(sp)
ADDI sp, sp, 4
LW t68, 0(sp)
ADDI sp, sp, 4
LW t67, 0(sp)
ADDI sp, sp, 4
LW t66, 0(sp)
ADDI sp, sp, 4
LW t65, 0(sp)
ADDI sp, sp, 4
LW t64, 0(sp)
ADDI sp, sp, 4
LW t63, 0(sp)
ADDI sp, sp, 4
LW t62, 0(sp)
ADDI sp, sp, 4
LW t61, 0(sp)
ADDI sp, sp, 4
LW t60, 0(sp)
ADDI sp, sp, 4
LW t59, 0(sp)
ADDI sp, sp, 4
LW t58, 0(sp)
ADDI sp, sp, 4
LW t57, 0(sp)
ADDI sp, sp, 4
LW t56, 0(sp)
ADDI sp, sp, 4
LW t55, 0(sp)
ADDI sp, sp, 4
LW t54, 0(sp)
ADDI sp, sp, 4
LW t53, 0(sp)
ADDI sp, sp, 4
LW t52, 0(sp)
ADDI sp, sp, 4
LW t51, 0(sp)
ADDI sp, sp, 4
LW t50, 0(sp)
ADDI sp, sp, 4
LW t49, 0(sp)
ADDI sp, sp, 4
LW t48, 0(sp)
ADDI sp, sp, 4
LW t47, 0(sp)
ADDI sp, sp, 4
LW t46, 0(sp)
ADDI sp, sp, 4
LW t45, 0(sp)
ADDI sp, sp, 4
LW t44, 0(sp)
ADDI sp, sp, 4
LW t43, 0(sp)
ADDI sp, sp, 4
LW t42, 0(sp)
ADDI sp, sp, 4
LW t41, 0(sp)
ADDI sp, sp, 4
LW t40, 0(sp)
ADDI sp, sp, 4
LW t39, 0(sp)
ADDI sp, sp, 4
LW t38, 0(sp)
ADDI sp, sp, 4
LW t37, 0(sp)
ADDI sp, sp, 4
LW t36, 0(sp)
ADDI sp, sp, 4
LW t35, 0(sp)
ADDI sp, sp, 4
LW t34, 0(sp)
ADDI sp, sp, 4
LW t33, 0(sp)
ADDI sp, sp, 4
LW t32, 0(sp)
ADDI sp, sp, 4
LW t31, 0(sp)
ADDI sp, sp, 4
LW t30, 0(sp)
ADDI sp, sp, 4
LW t29, 0(sp)
ADDI sp, sp, 4
LW t28, 0(sp)
ADDI sp, sp, 4
LW t27, 0(sp)
ADDI sp, sp, 4
LW t26, 0(sp)
ADDI sp, sp, 4
LW t25, 0(sp)
ADDI sp, sp, 4
LW t24, 0(sp)
ADDI sp, sp, 4
LW t23, 0(sp)
ADDI sp, sp, 4
LW t22, 0(sp)
ADDI sp, sp, 4
LW t21, 0(sp)
ADDI sp, sp, 4
LW t20, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_printarray:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -4
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
SW t15, 0(sp)
ADDI sp, sp, -4
SW t16, 0(sp)
ADDI sp, sp, -4
SW t17, 0(sp)
ADDI sp, sp, -4
SW t18, 0(sp)
ADDI sp, sp, -4
SW t19, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
ADDI t2, fp, -4
LI t1, 0
SW t1, 0(t2)
loop_4:
ADDI t15, fp, -4
LW t16, 0(t15)
ADDI t17, fp, 12
LW t18, 0(t17)
BGE t16, t18, out_6
ADDI t7, fp, 16
LW t8, 0(t7)
ADDI t4, fp, -4
LW t5, 0(t4)
LI t3, 4
MUL t6, t5, t3
ADD t9, t8, t6
FLW f1, 0(t9)
PUTF f1
ADDI t14, fp, -4
ADDI t11, fp, -4
LW t12, 0(t11)
LI t10, 1
ADD t13, t12, t10
SW t13, 0(t14)
J loop_4
out_6:
func_ret_printarray:
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t19, 0(sp)
ADDI sp, sp, 4
LW t18, 0(sp)
ADDI sp, sp, 4
LW t17, 0(sp)
ADDI sp, sp, 4
LW t16, 0(sp)
ADDI sp, sp, 4
LW t15, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_swap:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -4
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
FSW f2, 0(sp)
ADDI sp, sp, -4
FSW f3, 0(sp)
ADDI sp, sp, -4
ADDI t3, fp, -4
ADDI t1, fp, 16
LW t2, 0(t1)
FLW f1, 0(t2)
FSW f1, 0(t3)
ADDI t4, fp, 16
LW t5, 0(t4)
ADDI t6, fp, 12
LW t7, 0(t6)
FLW f2, 0(t7)
FSW f2, 0(t5)
ADDI t8, fp, 12
LW t9, 0(t8)
ADDI t10, fp, -4
FLW f3, 0(t10)
FSW f3, 0(t9)
J func_ret_swap
func_ret_swap:
ADDI sp, sp, 4
FLW f3, 0(sp)
ADDI sp, sp, 4
FLW f2, 0(sp)
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET



.section .strings
0x10000000 "Enter size: "
0x10000004 "Enter number: "
0x10000008 "Sorting ..."
